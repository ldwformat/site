docs:
  docs:
    overview: index.html
  basics:
    why_rust: a1.why_rust.html
    installation: a2.installation.html
    hello_world: a3.hello_world.html
    cargo,crates_and_basic_project_structure: a4.cargo,crates_and_basic_project_structure.html
    comments_and_documenting_the_code: a5.comments_and_documenting_the_code.html
    variable_bindings,constants_and_statics: a6.variable_bindings,constants_and_statics.html
    functions: a7.functions.html
    primitive_data_types: a8.primitive_data_types.html
    operators: a9.operators.html
    control_flows: a10.control_flows.html
  beyond_the_basics:
    vectors: b1.vectors.html
    structs: b2.structs.html
    enums: b3.enums.html
    generics: b4.generics.html
    impls_and_traits: b5.impls_and_traits.html
  the_tough_part:
    ownership: c1.ownership.html
    borrowing: c2.borrowing.html
    lifetimes: c3.lifetimes.html
  lets_get_it_started:
    code_organization: d1.code_organization.html
    functions_co: d2.functions.html
    modules: d3.modules.html
    crates: d4.crates.html
    workspaces: d5.workspaces.html
    use: d6.use.html
    std_primitives_and_preludes: d7.std_primitives_and_preludes.html
  error_handling:
    smart_compiler: e1.smart_compiler.html
    panicking: e2.panicking.html
    option_and_result: e3.option_and_result.html
    unwrap_and_expect: e4.unwrap_and_expect.html
    error_and_none_propagation: e5.error_and_none_propagation.html
    combinators: e6.combinators.html
    custom_error_types: e7.custom_error_types.html